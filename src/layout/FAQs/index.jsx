import React, { useState } from "react";
import download from '../../assets/icon/download.svg';

const FAQsComponent = () => {
  // State to manage the open/close of each accordion item
  const [openIndex, setOpenIndex] = useState(null);

  // FAQs data
  const faqs = [
    {
      question: "1. Is Veil a decentralized exchange (DEX)?",
      answer:
        "No, Veil is not a decentralized exchange (DEX) platform. Instead, it functions as a protocol and bridge between different blockchain networks, enabling cryptocurrency swaps and transactions. While it's not a DEX, Veil emphasizes privacy, security, and community engagement.",
    },
    {
      question: "2. How can I participate in the Veil Revenue Share Program?",
      answer:
        "To participate in the Veil Revenue Share Program, you need to hold a minimum amount of Veil tokens in your wallet. The specific amount required for eligibility is determined by the platform and is transparently communicated to the community. The program distributes a share of the exchange's revenue, including trading fees from both the Veil token and the exchange, to eligible token holders regularly.",
    },
    {
      question:
        "3. What percentage of the Trading fee and token fee is allocated towards the Veil Revenue Share Program?",
      answer:
        "20% of the total trading fees generated by the Veil platform and the Veil Token are allocated to the Veil Revenue Share Program. This includes both the trading fee from the Veil token and the trading fee from the exchange. This revenue is distributed proportionally among eligible token holders as part of the program, allowing them to earn a share of the exchange's success.",
    },
  ];

  // Function to toggle accordion items
  const toggleAccordion = (index) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (

    <section className="w-full overflow-hidden pt-[240px] pb-[140px] mt-[-50px] flex items-center flex-col bg-[#16161c] font-nav-veil mx-auto px-4">
      <div className="max-w-[960px]">
        {/* Page Title */}
        <div className="flex justify-center items-center mb-4 ">
          <h1 className="text-[40px] font-bold text-transparent bg-clip-text bg-gradient-to-r from-[#fff] to-[#545759]">
            FAQs
          </h1>
        </div>

        {/* Subtitle */}
        <h2 className="text-[20px] text-home_text text-center mb-6 md:mb-12 font-bold">
          Answering the most popular questions
        </h2>

        {/* Accordion */}
        <div className="w-full">
          {faqs.map((faq, index) => (
            <div
              key={index}
              className="border border-gray-700 rounded-lg overflow-hidden"
            >
              {/* Accordion Header */}
              <button
                className={`w-full flex justify-between text-left p-4 bg-[#202029] hover:bg-[#34344580] text-gray-300 hover:text-nav_hover font-normal transition-all ${openIndex === index ? "bg-gray-700" : ""
                  }`}
                onClick={() => toggleAccordion(index)}
              >
                <div>{faq.question}</div>
                <img 
                  src={download} 
                  width={20}                   
                  className={`transition-transform duration-300 ${
                    openIndex === index ? "rotate-180" : "rotate-0"
                  }`}
                  alt="toggle icon"
                />
              </button>

              {/* Accordion Body */}
              <div
                className={`overflow-hidden transition-[max-height] duration-500 ${openIndex === index ? "max-h-96" : "max-h-0"
                  }`}
              >
                <div className="p-4 bg-[#202029] text-gray-300 text-left font-home_header">
                  {faq.answer}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default FAQsComponent;
